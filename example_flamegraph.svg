<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Golang CPU Profile</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>sock_read_iter (1 samples, 20.00%)</title><rect x="718.0" y="229" width="236.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="721.00" y="239.5" >sock_read_iter</text>
</g>
<g >
<title>internal/poll.(*FD).Write /usr/local/go/src/internal/poll/fd_unix.go:795 (1 samples, 20.00%)</title><rect x="954.0" y="549" width="236.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="957.00" y="559.5" >internal/poll.(*FD).Write /usr/..</text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 20.00%)</title><rect x="10.0" y="309" width="236.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >__x64_sys_futex</text>
</g>
<g >
<title>vfs_write (1 samples, 20.00%)</title><rect x="954.0" y="85" width="236.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="957.00" y="95.5" >vfs_write</text>
</g>
<g >
<title>golang.org/x/net/http2.(*clientConnReadLoop).run /go/pkg/mod/golang.org/x/net@v0.26.0/http2/transport.go:2358 (1 samples, 20.00%)</title><rect x="718.0" y="357" width="236.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="721.00" y="367.5" >golang.org/x/net/http2.(*client..</text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 20.00%)</title><rect x="954.0" y="229" width="236.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="957.00" y="239.5" >ip_finish_output2</text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/util/wait.runConditionWithCrashProtectionWithContext /go/pkg/mod/k8s.io/apimachinery@v0.25.16/pkg/util/wait/wait.go:235 (1 samples, 20.00%)</title><rect x="246.0" y="389" width="236.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="249.00" y="399.5" >k8s.io/apimachinery/pkg/util/wa..</text>
</g>
<g >
<title>runtime.wakep /usr/local/go/src/runtime/proc.go:2432 (1 samples, 20.00%)</title><rect x="10.0" y="549" width="236.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >runtime.wakep /usr/local/go/src..</text>
</g>
<g >
<title>wake_up_q (1 samples, 20.00%)</title><rect x="10.0" y="357" width="236.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >wake_up_q</text>
</g>
<g >
<title>ksys_read (1 samples, 20.00%)</title><rect x="718.0" y="197" width="236.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="721.00" y="207.5" >ksys_read</text>
</g>
<g >
<title>tcp_recvmsg_locked (1 samples, 20.00%)</title><rect x="718.0" y="277" width="236.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="721.00" y="287.5" >tcp_recvmsg_locked</text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 20.00%)</title><rect x="954.0" y="181" width="236.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="957.00" y="191.5" >tcp_write_xmit</text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection.RunOrDie /go/pkg/mod/k8s.io/client-go@v0.25.16/tools/leaderelection/leaderelection.go:227 (1 samples, 20.00%)</title><rect x="246.0" y="229" width="236.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="249.00" y="239.5" >k8s.io/client-go/tools/leaderel..</text>
</g>
<g >
<title>ksys_write (1 samples, 20.00%)</title><rect x="954.0" y="69" width="236.0" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="957.00" y="79.5" >ksys_write</text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection.(*LeaderElector).renew.func1 /go/pkg/mod/k8s.io/client-go@v0.25.16/tools/leaderelection/leaderelection.go:277 (1 samples, 20.00%)</title><rect x="246.0" y="325" width="236.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="249.00" y="335.5" >k8s.io/client-go/tools/leaderel..</text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection.(*LeaderElector).Run /go/pkg/mod/k8s.io/client-go@v0.25.16/tools/leaderelection/leaderelection.go:213 (1 samples, 20.00%)</title><rect x="246.0" y="245" width="236.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="249.00" y="255.5" >k8s.io/client-go/tools/leaderel..</text>
</g>
<g >
<title>crypto/tls.(*Conn).readRecordOrCCS /usr/local/go/src/crypto/tls/conn.go:616 (1 samples, 20.00%)</title><rect x="718.0" y="453" width="236.0" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="721.00" y="463.5" >crypto/tls.(*Conn).readRecordOr..</text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 20.00%)</title><rect x="954.0" y="245" width="236.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="957.00" y="255.5" >__dev_queue_xmit</text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/util/wait.ConditionFunc.WithContext.func1 /go/pkg/mod/k8s.io/apimachinery@v0.25.16/pkg/util/wait/wait.go:222 (1 samples, 20.00%)</title><rect x="246.0" y="405" width="236.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="249.00" y="415.5" >k8s.io/apimachinery/pkg/util/wa..</text>
</g>
<g >
<title>golang.org/x/net/http2.(*clientStream).encodeAndWriteHeaders /go/pkg/mod/golang.org/x/net@v0.26.0/http2/transport.go:1593 (1 samples, 20.00%)</title><rect x="954.0" y="389" width="236.0" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="957.00" y="399.5" >golang.org/x/net/http2.(*client..</text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection.(*LeaderElector).renew.func1.1 /go/pkg/mod/k8s.io/client-go@v0.25.16/tools/leaderelection/leaderelection.go:272 (1 samples, 20.00%)</title><rect x="246.0" y="421" width="236.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="249.00" y="431.5" >k8s.io/client-go/tools/leaderel..</text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/util/wait.BackoffUntil.func1 /go/pkg/mod/k8s.io/apimachinery@v0.25.16/pkg/util/wait/wait.go:158 (1 samples, 20.00%)</title><rect x="246.0" y="309" width="236.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="249.00" y="319.5" >k8s.io/apimachinery/pkg/util/wa..</text>
</g>
<g >
<title>golang.org/x/net/http2.(*clientConnReadLoop).processHeaders /go/pkg/mod/golang.org/x/net@v0.26.0/http2/transport.go:2469 (1 samples, 20.00%)</title><rect x="10.0" y="469" width="236.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >golang.org/x/net/http2.(*client..</text>
</g>
<g >
<title>github.com/openebs/dynamic-localpv-provisioner/cmd/provisioner-localpv/app.Start /go/pkg/mod/k8s.io/klog/v2@v2.100.1/klog.go:1335 (1 samples, 20.00%)</title><rect x="246.0" y="197" width="236.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="249.00" y="207.5" >github.com/openebs/dynamic-loca..</text>
</g>
<g >
<title>net.(*netFD).Read /usr/local/go/src/net/error_posix.go:17 (1 samples, 20.00%)</title><rect x="718.0" y="533" width="236.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="721.00" y="543.5" >net.(*netFD).Read /usr/local/go..</text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/util/wait.PollImmediateUntil /go/pkg/mod/k8s.io/apimachinery@v0.25.16/pkg/util/wait/wait.go:538 (1 samples, 20.00%)</title><rect x="246.0" y="341" width="236.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="249.00" y="351.5" >k8s.io/apimachinery/pkg/util/wa..</text>
</g>
<g >
<title>golang.org/x/net/http2.(*clientStream).doRequest /go/pkg/mod/golang.org/x/net@v0.26.0/http2/transport.go:1415 (1 samples, 20.00%)</title><rect x="954.0" y="357" width="236.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="957.00" y="367.5" >golang.org/x/net/http2.(*client..</text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/util/wait.poll /go/pkg/mod/k8s.io/apimachinery@v0.25.16/pkg/util/wait/wait.go:583 (1 samples, 20.00%)</title><rect x="246.0" y="373" width="236.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="249.00" y="383.5" >k8s.io/apimachinery/pkg/util/wa..</text>
</g>
<g >
<title>net_rx_action (1 samples, 20.00%)</title><rect x="954.0" y="309" width="236.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="957.00" y="319.5" >net_rx_action</text>
</g>
<g >
<title>try_to_wake_up (1 samples, 20.00%)</title><rect x="10.0" y="373" width="236.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >try_to_wake_up</text>
</g>
<g >
<title>runtime.goexit /usr/local/go/src/runtime/asm_amd64.s:1595 (1 samples, 20.00%)</title><rect x="10.0" y="405" width="236.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >runtime.goexit /usr/local/go/sr..</text>
</g>
<g >
<title>k8s.io/client-go/rest.(*Request).Do /go/pkg/mod/k8s.io/client-go@v0.25.16/rest/request.go:1026 (1 samples, 20.00%)</title><rect x="246.0" y="501" width="236.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="249.00" y="511.5" >k8s.io/client-go/rest.(*Request..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 20.00%)</title><rect x="718.0" y="165" width="236.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="721.00" y="175.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>handle_softirqs (1 samples, 20.00%)</title><rect x="954.0" y="293" width="236.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="957.00" y="303.5" >handle_softirqs</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 20.00%)</title><rect x="10.0" y="389" width="236.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >_raw_spin_unlock_irqrestore</text>
</g>
<g >
<title>golang.org/x/net/http2.stickyErrWriter.Write /go/pkg/mod/golang.org/x/net@v0.26.0/http2/transport.go:525 (1 samples, 20.00%)</title><rect x="954.0" y="453" width="236.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="957.00" y="463.5" >golang.org/x/net/http2.stickyEr..</text>
</g>
<g >
<title>runtime.mstart0 /usr/local/go/src/runtime/proc.go:1360 (1 samples, 20.00%)</title><rect x="482.0" y="549" width="236.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="485.00" y="559.5" >runtime.mstart0 /usr/local/go/s..</text>
</g>
<g >
<title>__tcp_cleanup_rbuf (1 samples, 20.00%)</title><rect x="718.0" y="293" width="236.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="721.00" y="303.5" >__tcp_cleanup_rbuf</text>
</g>
<g >
<title>tcp_recvmsg (1 samples, 20.00%)</title><rect x="718.0" y="261" width="236.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="721.00" y="271.5" >tcp_recvmsg</text>
</g>
<g >
<title>runtime.usleep /usr/local/go/src/runtime/sys_linux_amd64.s:140 (1 samples, 20.00%)</title><rect x="482.0" y="597" width="236.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="485.00" y="607.5" >runtime.usleep /usr/local/go/sr..</text>
</g>
<g >
<title>github.com/openebs/dynamic-localpv-provisioner/cmd/provisioner-localpv/app.StartProvisioner.func1 /go/src/github.com/openebs/dynamic-localpv-provisioner/cmd/provisioner-localpv/app/start.go:38 (1 samples, 20.00%)</title><rect x="246.0" y="181" width="236.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="249.00" y="191.5" >github.com/openebs/dynamic-loca..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 20.00%)</title><rect x="954.0" y="37" width="236.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="957.00" y="47.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>do_nanosleep (1 samples, 20.00%)</title><rect x="482.0" y="421" width="236.0" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="485.00" y="431.5" >do_nanosleep</text>
</g>
<g >
<title>__sock_sendmsg (1 samples, 20.00%)</title><rect x="954.0" y="117" width="236.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="957.00" y="127.5" >__sock_sendmsg</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 20.00%)</title><rect x="954.0" y="53" width="236.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="957.00" y="63.5" >do_syscall_64</text>
</g>
<g >
<title>golang.org/x/net/http2.(*Transport).newClientConn.func1 /go/pkg/mod/golang.org/x/net@v0.26.0/http2/transport.go:869 (1 samples, 20.00%)</title><rect x="718.0" y="325" width="236.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="721.00" y="335.5" >golang.org/x/net/http2.(*Transp..</text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection.(*LeaderElector).tryAcquireOrRenew /go/pkg/mod/k8s.io/client-go@v0.25.16/tools/leaderelection/leaderelection.go:366 (1 samples, 20.00%)</title><rect x="246.0" y="437" width="236.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="249.00" y="447.5" >k8s.io/client-go/tools/leaderel..</text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 20.00%)</title><rect x="954.0" y="213" width="236.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="957.00" y="223.5" >__ip_queue_xmit</text>
</g>
<g >
<title>runtime.sysmon /usr/local/go/src/runtime/proc.go:5155 (1 samples, 20.00%)</title><rect x="482.0" y="581" width="236.0" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="485.00" y="591.5" >runtime.sysmon /usr/local/go/sr..</text>
</g>
<g >
<title>runtime.main /usr/local/go/src/runtime/proc.go:259 (1 samples, 20.00%)</title><rect x="246.0" y="101" width="236.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="249.00" y="111.5" >runtime.main /usr/local/go/src/..</text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 20.00%)</title><rect x="954.0" y="149" width="236.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="957.00" y="159.5" >tcp_sendmsg_locked</text>
</g>
<g >
<title>runtime.mstart /usr/local/go/src/runtime/asm_amd64.s:391 (1 samples, 20.00%)</title><rect x="482.0" y="533" width="236.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="485.00" y="543.5" >runtime.mstart /usr/local/go/sr..</text>
</g>
<g >
<title>&lt;anonymous_function&gt; /usr/local/go/src/runtime/malloc.go:1202 (1 samples, 20.00%)</title><rect x="246.0" y="565" width="236.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="249.00" y="575.5" >&lt;anonymous_function&gt; /usr/local..</text>
</g>
<g >
<title>syscall.Syscall /usr/local/go/src/syscall/syscall_linux.go:81 (2 samples, 40.00%)</title><rect x="718.0" y="581" width="472.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="721.00" y="591.5" >syscall.Syscall /usr/local/go/src/syscall/syscall_linux.go:81</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 20.00%)</title><rect x="10.0" y="277" width="236.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>golang.org/x/net/http2.(*clientStream).writeRequest /go/pkg/mod/golang.org/x/net@v0.26.0/http2/transport.go:1480 (1 samples, 20.00%)</title><rect x="954.0" y="373" width="236.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="957.00" y="383.5" >golang.org/x/net/http2.(*client..</text>
</g>
<g >
<title>inet_recvmsg (1 samples, 20.00%)</title><rect x="718.0" y="245" width="236.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="721.00" y="255.5" >inet_recvmsg</text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/util/wait.JitterUntil /go/pkg/mod/k8s.io/apimachinery@v0.25.16/pkg/util/wait/wait.go:136 (1 samples, 20.00%)</title><rect x="246.0" y="277" width="236.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="249.00" y="287.5" >k8s.io/apimachinery/pkg/util/wa..</text>
</g>
<g >
<title>bufio.(*Reader).Read /usr/local/go/src/bufio/bufio.go:237 (1 samples, 20.00%)</title><rect x="718.0" y="421" width="236.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="721.00" y="431.5" >bufio.(*Reader).Read /usr/local..</text>
</g>
<g >
<title>runtime.futex /usr/local/go/src/runtime/sys_linux_amd64.s:560 (1 samples, 20.00%)</title><rect x="10.0" y="597" width="236.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >runtime.futex /usr/local/go/src..</text>
</g>
<g >
<title>schedule (1 samples, 20.00%)</title><rect x="482.0" y="437" width="236.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="485.00" y="447.5" >schedule</text>
</g>
<g >
<title>golang.org/x/net/http2.(*ClientConn).readLoop /go/pkg/mod/golang.org/x/net@v0.26.0/http2/transport.go:2254 (1 samples, 20.00%)</title><rect x="718.0" y="341" width="236.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="721.00" y="351.5" >golang.org/x/net/http2.(*Client..</text>
</g>
<g >
<title>runtime.systemstack /usr/local/go/src/runtime/asm_amd64.s:496 (1 samples, 20.00%)</title><rect x="10.0" y="501" width="236.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >runtime.systemstack /usr/local/..</text>
</g>
<g >
<title>do_futex (1 samples, 20.00%)</title><rect x="10.0" y="325" width="236.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >do_futex</text>
</g>
<g >
<title>golang.org/x/net/http2.(*Framer).ReadFrame /go/pkg/mod/golang.org/x/net@v0.26.0/http2/frame.go:501 (1 samples, 20.00%)</title><rect x="718.0" y="373" width="236.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="721.00" y="383.5" >golang.org/x/net/http2.(*Framer..</text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection.(*LeaderElector).renew /go/pkg/mod/k8s.io/client-go@v0.25.16/tools/leaderelection/leaderelection.go:288 (1 samples, 20.00%)</title><rect x="246.0" y="261" width="236.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="249.00" y="271.5" >k8s.io/client-go/tools/leaderel..</text>
</g>
<g >
<title>do_softirq.part.0 (1 samples, 20.00%)</title><rect x="954.0" y="277" width="236.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="957.00" y="287.5" >do_softirq.part.0</text>
</g>
<g >
<title>crypto/tls.(*Conn).Read /usr/local/go/src/crypto/tls/conn.go:1315 (1 samples, 20.00%)</title><rect x="718.0" y="437" width="236.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="721.00" y="447.5" >crypto/tls.(*Conn).Read /usr/lo..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 20.00%)</title><rect x="718.0" y="181" width="236.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="721.00" y="191.5" >do_syscall_64</text>
</g>
<g >
<title>golang.org/x/net/http2.(*ClientConn).roundTrip.func4 /go/pkg/mod/golang.org/x/net@v0.26.0/http2/transport.go:1319 (1 samples, 20.00%)</title><rect x="954.0" y="341" width="236.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="957.00" y="351.5" >golang.org/x/net/http2.(*Client..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 20.00%)</title><rect x="482.0" y="469" width="236.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="485.00" y="479.5" >finish_task_switch.isra.0</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 20.00%)</title><rect x="482.0" y="373" width="236.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="485.00" y="383.5" >do_syscall_64</text>
</g>
<g >
<title>syscall.read /usr/local/go/src/syscall/zsyscall_linux_amd64.go:698 (1 samples, 20.00%)</title><rect x="718.0" y="565" width="236.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="721.00" y="575.5" >syscall.read /usr/local/go/src/..</text>
</g>
<g >
<title>runtime.goexit /usr/local/go/src/runtime/asm_amd64.s:1595 (1 samples, 20.00%)</title><rect x="718.0" y="309" width="236.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="721.00" y="319.5" >runtime.goexit /usr/local/go/sr..</text>
</g>
<g >
<title>crypto/tls.(*Conn).readFromUntil /usr/local/go/src/crypto/tls/conn.go:810 (1 samples, 20.00%)</title><rect x="718.0" y="469" width="236.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="721.00" y="479.5" >crypto/tls.(*Conn).readFromUnti..</text>
</g>
<g >
<title>runtime.mstart1 /usr/local/go/src/runtime/proc.go:1426 (1 samples, 20.00%)</title><rect x="482.0" y="565" width="236.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="485.00" y="575.5" >runtime.mstart1 /usr/local/go/s..</text>
</g>
<g >
<title>bytes.(*Buffer).ReadFrom /usr/local/go/src/bytes/buffer.go:202 (1 samples, 20.00%)</title><rect x="718.0" y="485" width="236.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="721.00" y="495.5" >bytes.(*Buffer).ReadFrom /usr/l..</text>
</g>
<g >
<title>sock_write_iter (1 samples, 20.00%)</title><rect x="954.0" y="101" width="236.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="957.00" y="111.5" >sock_write_iter</text>
</g>
<g >
<title>hrtimer_nanosleep (1 samples, 20.00%)</title><rect x="482.0" y="405" width="236.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="485.00" y="415.5" >hrtimer_nanosleep</text>
</g>
<g >
<title>golang.org/x/net/http2.(*clientConnReadLoop).run /go/pkg/mod/golang.org/x/net@v0.26.0/http2/transport.go:2359 (1 samples, 20.00%)</title><rect x="10.0" y="453" width="236.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >golang.org/x/net/http2.(*client..</text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection/resourcelock.(*MultiLock).Update /go/pkg/mod/k8s.io/client-go@v0.25.16/tools/leaderelection/resourcelock/multilock.go:82 (1 samples, 20.00%)</title><rect x="246.0" y="453" width="236.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="249.00" y="463.5" >k8s.io/client-go/tools/leaderel..</text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/util/wait.BackoffUntil /go/pkg/mod/k8s.io/apimachinery@v0.25.16/pkg/util/wait/wait.go:142 (1 samples, 20.00%)</title><rect x="246.0" y="293" width="236.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="249.00" y="303.5" >k8s.io/apimachinery/pkg/util/wa..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 20.00%)</title><rect x="482.0" y="357" width="236.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="485.00" y="367.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>runtime.startm /usr/local/go/src/runtime/proc.go:2348 (1 samples, 20.00%)</title><rect x="10.0" y="565" width="236.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >runtime.startm /usr/local/go/sr..</text>
</g>
<g >
<title>runtime.mallocgc /usr/local/go/src/runtime/malloc.go:1051 (1 samples, 20.00%)</title><rect x="246.0" y="581" width="236.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="249.00" y="591.5" >runtime.mallocgc /usr/local/go/..</text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 20.00%)</title><rect x="954.0" y="261" width="236.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="957.00" y="271.5" >__local_bh_enable_ip</text>
</g>
<g >
<title>runtime.goready.func1 /usr/local/go/src/runtime/proc.go:375 (1 samples, 20.00%)</title><rect x="10.0" y="517" width="236.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >runtime.goready.func1 /usr/loca..</text>
</g>
<g >
<title>bufio.(*Writer).Flush /usr/local/go/src/bufio/bufio.go:630 (1 samples, 20.00%)</title><rect x="954.0" y="421" width="236.0" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="957.00" y="431.5" >bufio.(*Writer).Flush /usr/loca..</text>
</g>
<g >
<title>crypto/tls.(*Conn).writeRecordLocked /usr/local/go/src/crypto/tls/conn.go:990 (1 samples, 20.00%)</title><rect x="954.0" y="485" width="236.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="957.00" y="495.5" >crypto/tls.(*Conn).writeRecordL..</text>
</g>
<g >
<title>main.main /go/src/github.com/openebs/dynamic-localpv-provisioner/cmd/provisioner-localpv/main.go:54 (1 samples, 20.00%)</title><rect x="246.0" y="117" width="236.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="249.00" y="127.5" >main.main /go/src/github.com/op..</text>
</g>
<g >
<title>github.com/spf13/cobra.(*Command).execute /go/pkg/mod/github.com/spf13/cobra@v1.1.3/command.go:856 (1 samples, 20.00%)</title><rect x="246.0" y="165" width="236.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="249.00" y="175.5" >github.com/spf13/cobra.(*Comman..</text>
</g>
<g >
<title>main.func /go/src/github.com/openebs/dynamic-localpv-provisioner/cmd/provisioner-localpv/main.go:61 (1 samples, 20.00%)</title><rect x="482.0" y="501" width="236.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="485.00" y="511.5" >main.func /go/src/github.com/op..</text>
</g>
<g >
<title>__x64_sys_nanosleep (1 samples, 20.00%)</title><rect x="482.0" y="389" width="236.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="485.00" y="399.5" >__x64_sys_nanosleep</text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 20.00%)</title><rect x="954.0" y="165" width="236.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="957.00" y="175.5" >__tcp_push_pending_frames</text>
</g>
<g >
<title>net.(*conn).Read /usr/local/go/src/net/net.go:184 (1 samples, 20.00%)</title><rect x="718.0" y="517" width="236.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="721.00" y="527.5" >net.(*conn).Read /usr/local/go/..</text>
</g>
<g >
<title>k8s.io/client-go/rest.(*Request).request /go/pkg/mod/k8s.io/client-go@v0.25.16/rest/request.go:1008 (1 samples, 20.00%)</title><rect x="246.0" y="517" width="236.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="249.00" y="527.5" >k8s.io/client-go/rest.(*Request..</text>
</g>
<g >
<title>k8s.io/client-go/rest.(*Request).request.func3 /go/pkg/mod/k8s.io/client-go@v0.25.16/rest/request.go:1002 (1 samples, 20.00%)</title><rect x="246.0" y="533" width="236.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="249.00" y="543.5" >k8s.io/client-go/rest.(*Request..</text>
</g>
<g >
<title>vfs_read (1 samples, 20.00%)</title><rect x="718.0" y="213" width="236.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="721.00" y="223.5" >vfs_read</text>
</g>
<g >
<title>all (5 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 20.00%)</title><rect x="10.0" y="293" width="236.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >do_syscall_64</text>
</g>
<g >
<title>syscall.write /usr/local/go/src/syscall/zsyscall_linux_amd64.go:926 (1 samples, 20.00%)</title><rect x="954.0" y="565" width="236.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="957.00" y="575.5" >syscall.write /usr/local/go/src..</text>
</g>
<g >
<title>k8s.io/client-go/kubernetes/typed/coordination/v1.(*leases).Update /go/pkg/mod/k8s.io/client-go@v0.25.16/kubernetes/typed/coordination/v1/lease.go:138 (1 samples, 20.00%)</title><rect x="246.0" y="485" width="236.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="249.00" y="495.5" >k8s.io/client-go/kubernetes/typ..</text>
</g>
<g >
<title>main.run /go/src/github.com/openebs/dynamic-localpv-provisioner/cmd/provisioner-localpv/main.go:79 (1 samples, 20.00%)</title><rect x="246.0" y="133" width="236.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="249.00" y="143.5" >main.run /go/src/github.com/ope..</text>
</g>
<g >
<title>internal/poll.(*FD).Read /usr/local/go/src/internal/poll/fd_unix.go:795 (1 samples, 20.00%)</title><rect x="718.0" y="549" width="236.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="721.00" y="559.5" >internal/poll.(*FD).Read /usr/l..</text>
</g>
<g >
<title>futex_wake (1 samples, 20.00%)</title><rect x="10.0" y="341" width="236.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >futex_wake</text>
</g>
<g >
<title>golang.org/x/net/http2.(*ClientConn).readLoop /go/pkg/mod/golang.org/x/net@v0.26.0/http2/transport.go:2254 (1 samples, 20.00%)</title><rect x="10.0" y="437" width="236.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >golang.org/x/net/http2.(*Client..</text>
</g>
<g >
<title>io.ReadAtLeast /usr/local/go/src/io/io.go:333 (1 samples, 20.00%)</title><rect x="718.0" y="405" width="236.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="721.00" y="415.5" >io.ReadAtLeast /usr/local/go/sr..</text>
</g>
<g >
<title>crypto/tls.(*atLeastReader).Read /usr/local/go/src/crypto/tls/conn.go:788 (1 samples, 20.00%)</title><rect x="718.0" y="501" width="236.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="721.00" y="511.5" >crypto/tls.(*atLeastReader).Rea..</text>
</g>
<g >
<title>runtime.goexit /usr/local/go/src/runtime/asm_amd64.s:1595 (1 samples, 20.00%)</title><rect x="954.0" y="325" width="236.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="957.00" y="335.5" >runtime.goexit /usr/local/go/sr..</text>
</g>
<g >
<title>runtime.heapBitsSetType /usr/local/go/src/runtime/mbitmap.go:335 (1 samples, 20.00%)</title><rect x="246.0" y="597" width="236.0" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="249.00" y="607.5" >runtime.heapBitsSetType /usr/lo..</text>
</g>
<g >
<title>runtime.goexit /usr/local/go/src/runtime/asm_amd64.s:1595 (1 samples, 20.00%)</title><rect x="246.0" y="85" width="236.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="249.00" y="95.5" >runtime.goexit /usr/local/go/sr..</text>
</g>
<g >
<title>golang.org/x/net/http2.(*stickyErrWriter).Write ./&lt;autogenerated&gt;:1 (1 samples, 20.00%)</title><rect x="954.0" y="437" width="236.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="957.00" y="447.5" >golang.org/x/net/http2.(*sticky..</text>
</g>
<g >
<title>sigs.k8s.io/sig-storage-lib-external-provisioner/v9/controller.(*ProvisionController).Run /go/pkg/mod/sigs.k8s.io/sig-storage-lib-external-provisioner/v9@v9.0.3/controller/controller.go:893 (1 samples, 20.00%)</title><rect x="246.0" y="213" width="236.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="249.00" y="223.5" >sigs.k8s.io/sig-storage-lib-ext..</text>
</g>
<g >
<title>golang.org/x/net/http2.(*ClientConn).writeHeaders /go/pkg/mod/golang.org/x/net@v0.26.0/http2/transport.go:1717 (1 samples, 20.00%)</title><rect x="954.0" y="405" width="236.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="957.00" y="415.5" >golang.org/x/net/http2.(*Client..</text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 20.00%)</title><rect x="954.0" y="133" width="236.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="957.00" y="143.5" >tcp_sendmsg</text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 /usr/local/go/src/runtime/internal/syscall/asm_linux_amd64.s:36 (2 samples, 40.00%)</title><rect x="718.0" y="597" width="472.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="721.00" y="607.5" >runtime/internal/syscall.Syscall6 /usr/local/go/src/runtime/inte..</text>
</g>
<g >
<title>crypto/tls.(*Conn).write /usr/local/go/src/crypto/tls/conn.go:923 (1 samples, 20.00%)</title><rect x="954.0" y="501" width="236.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="957.00" y="511.5" >crypto/tls.(*Conn).write /usr/l..</text>
</g>
<g >
<title>github.com/spf13/cobra.(*Command).ExecuteC /go/pkg/mod/github.com/spf13/cobra@v1.1.3/command.go:960 (1 samples, 20.00%)</title><rect x="246.0" y="149" width="236.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="249.00" y="159.5" >github.com/spf13/cobra.(*Comman..</text>
</g>
<g >
<title>k8s.io/client-go/tools/leaderelection/resourcelock.(*LeaseLock).Update /go/pkg/mod/k8s.io/client-go@v0.25.16/tools/leaderelection/resourcelock/leaselock.go:76 (1 samples, 20.00%)</title><rect x="246.0" y="469" width="236.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="249.00" y="479.5" >k8s.io/client-go/tools/leaderel..</text>
</g>
<g >
<title>main.func /go/src/github.com/openebs/dynamic-localpv-provisioner/cmd/provisioner-localpv/main.go:61 (1 samples, 20.00%)</title><rect x="482.0" y="485" width="236.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="485.00" y="495.5" >main.func /go/src/github.com/op..</text>
</g>
<g >
<title>k8s.io/apimachinery/pkg/util/wait.PollImmediateUntilWithContext /go/pkg/mod/k8s.io/apimachinery@v0.25.16/pkg/util/wait/wait.go:547 (1 samples, 20.00%)</title><rect x="246.0" y="357" width="236.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="249.00" y="367.5" >k8s.io/apimachinery/pkg/util/wa..</text>
</g>
<g >
<title>runtime.closechan /usr/local/go/src/runtime/proc.go:6114 (1 samples, 20.00%)</title><rect x="10.0" y="485" width="236.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >runtime.closechan /usr/local/go..</text>
</g>
<g >
<title>golang.org/x/net/http2.(*Transport).newClientConn.func1 /go/pkg/mod/golang.org/x/net@v0.26.0/http2/transport.go:869 (1 samples, 20.00%)</title><rect x="10.0" y="421" width="236.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >golang.org/x/net/http2.(*Transp..</text>
</g>
<g >
<title>__schedule (1 samples, 20.00%)</title><rect x="482.0" y="453" width="236.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="485.00" y="463.5" >__schedule</text>
</g>
<g >
<title>main.func /go/src/github.com/openebs/dynamic-localpv-provisioner/cmd/provisioner-localpv/main.go:61 (1 samples, 20.00%)</title><rect x="482.0" y="517" width="236.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="485.00" y="527.5" >main.func /go/src/github.com/op..</text>
</g>
<g >
<title>golang.org/x/net/http2.readFrameHeader /go/pkg/mod/golang.org/x/net@v0.26.0/http2/frame.go:238 (1 samples, 20.00%)</title><rect x="718.0" y="389" width="236.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="721.00" y="399.5" >golang.org/x/net/http2.readFram..</text>
</g>
<g >
<title>runtime.ready /usr/local/go/src/runtime/proc.go:863 (1 samples, 20.00%)</title><rect x="10.0" y="533" width="236.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >runtime.ready /usr/local/go/src..</text>
</g>
<g >
<title>net.(*conn).Write /usr/local/go/src/net/net.go:196 (1 samples, 20.00%)</title><rect x="954.0" y="517" width="236.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="957.00" y="527.5" >net.(*conn).Write /usr/local/go..</text>
</g>
<g >
<title>k8s.io/client-go/rest.(*withRetry).IsNextRetry /go/pkg/mod/k8s.io/client-go@v0.25.16/rest/with_retry.go:163 (1 samples, 20.00%)</title><rect x="246.0" y="549" width="236.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="249.00" y="559.5" >k8s.io/client-go/rest.(*withRet..</text>
</g>
<g >
<title>crypto/tls.(*Conn).Write /usr/local/go/src/crypto/tls/conn.go:1185 (1 samples, 20.00%)</title><rect x="954.0" y="469" width="236.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="957.00" y="479.5" >crypto/tls.(*Conn).Write /usr/l..</text>
</g>
<g >
<title>net.(*netFD).Write /usr/local/go/src/net/error_posix.go:17 (1 samples, 20.00%)</title><rect x="954.0" y="533" width="236.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="957.00" y="543.5" >net.(*netFD).Write /usr/local/g..</text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 20.00%)</title><rect x="954.0" y="197" width="236.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="957.00" y="207.5" >__tcp_transmit_skb</text>
</g>
<g >
<title>runtime.notewakeup /usr/local/go/src/runtime/lock_futex.go:146 (1 samples, 20.00%)</title><rect x="10.0" y="581" width="236.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >runtime.notewakeup /usr/local/g..</text>
</g>
</g>
</svg>
