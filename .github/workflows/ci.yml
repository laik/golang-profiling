name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: rustfmt, clippy
    
    - name: Install nightly for eBPF
      uses: dtolnay/rust-toolchain@nightly
      with:
        toolchain: nightly
        components: rust-src
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang \
          llvm \
          libelf-dev \
          libz-dev \
          pkg-config \
          linux-headers-$(uname -r) \
          perl
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Build
      run: cargo build --verbose
    
    - name: Run tests
      run: cargo test --verbose

  build:
    name: Build Release
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
    
    - name: Install nightly for eBPF
      uses: dtolnay/rust-toolchain@nightly
      with:
        toolchain: nightly
        components: rust-src
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang \
          llvm \
          libelf-dev \
          libz-dev \
          pkg-config \
          linux-headers-$(uname -r) \
          perl
    
    - name: Build release
      run: cargo build --release
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: golang-profiling-linux-x86_64
        path: target/release/golang-profiling
        retention-days: 30